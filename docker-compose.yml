version: "3.8"

services:
  postgres:
    build:
      context: .
      dockerfile: database/Dockerfile.postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      PRODUCTS_CSV_PATH: ${PRODUCTS_CSV_PATH}
      PURCHASES_CSV_PATH: ${PURCHASES_CSV_PATH}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/data:/data
      - ./shared:/shared
      - ./alembic:/alembic
      - ./alembic.ini:/alembic.ini
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  cash-register:
    build:
      context: .
      dockerfile: cash_register/Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      CASH_REGISTER_HOST: ${CASH_REGISTER_HOST}
      CASH_REGISTER_PORT: "${CASH_REGISTER_PORT}"
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./cash_register/logs:/app/cash_register/logs
    networks:
      - app-network
    restart: unless-stopped

  store-analytics:
    build:
      context: .
      dockerfile: store_analytics/Dockerfile
    env_file:
      - .env
    ports:
      - "8001:8001"
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      STORE_ANALYTICS_HOST: ${STORE_ANALYTICS_HOST}
      STORE_ANALYTICS_PORT: "${STORE_ANALYTICS_PORT}"
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./store_analytics/logs:/app/store_analytics/logs
    networks:
      - app-network
    restart: unless-stopped

  web_client:
    build:
      context: ./web_client
      dockerfile: Dockerfile
      args:
        - VITE_API_CASH_REGISTER_BASE_URL=${VITE_API_CASH_REGISTER_BASE_URL}
        - VITE_ANALYTICS_API_BASE_URL=${VITE_ANALYTICS_API_BASE_URL}
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      VITE_API_CASH_REGISTER_BASE_URL: ${VITE_API_CASH_REGISTER_BASE_URL}
      VITE_ANALYTICS_API_BASE_URL: ${VITE_ANALYTICS_API_BASE_URL}
    depends_on:
      - cash-register
      - store-analytics
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
